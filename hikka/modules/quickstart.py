# ¬©Ô∏è Dan Gazizullin, 2021-2023
# This file is a part of Hikka Userbot
# üåê https://github.com/hikariatama/Hikka
# You can redistribute it and/or modify it under the terms of the GNU AGPLv3
# üîë https://www.gnu.org/licenses/agpl-3.0.html

import logging
import os
from random import choice

from .. import loader, translations, utils
from ..inline.types import BotInlineCall

logger = logging.getLogger(__name__)

imgs = [
    "https://i.gifer.com/GmUB.gif",
    "https://i.gifer.com/Afdn.gif",
    "https://i.gifer.com/3uvT.gif",
    "https://i.gifer.com/2qQQ.gif",
    "https://i.gifer.com/Lym6.gif",
    "https://i.gifer.com/IjT4.gif",
    "https://i.gifer.com/A9H.gif",
]


@loader.tds
class QuickstartMod(loader.Module):
    """Notifies user about userbot installation"""

    strings = {
        "name": "Quickstart",
        "base": """üåòüá¨üáß <b>Hello.</b> You've just installed <b>Falcon</b> userbot.

‚ùì <b>Need help?</b> Feel free to join our support chat. We help <b>everyone</b>.

üìº <b>You can find and install modules using @hikkamods_bot. Simply enter your search query and click ‚õ© Install on needed module</b>


üíÅ‚Äç‚ôÄÔ∏è <b>Quickstart:</b>

1Ô∏è‚É£ <b>Type</b> <code>.help</code> <b>to see modules list</b>
2Ô∏è‚É£ <b>Type</b> <code>.help &lt;ModuleName/command&gt;</code> <b>to see help of module ModuleName</b>
3Ô∏è‚É£ <b>Type</b> <code>.dlmod &lt;link&gt;</code> <b>to load module from link</b>
4Ô∏è‚É£ <b>Type</b> <code>.loadmod</code> <b>with reply to file to install module from it</b>
5Ô∏è‚É£ <b>Type</b> <code>.unloadmod &lt;ModuleName&gt;</code> <b>to unload module ModuleName</b>

üí° <b>Hikka supports modules from Friendly-Telegram, DragonUserbot and GeekTG, as well as its own ones.</b>""",
        "FalconHost": (
            "ü§© <b>Your userbot is installed on FalconHost</b>.If you need help"
            " <b>join our community @FalconHelpChat</b>.  "
            " Every month <b>you will need to go to"
            " @FalconHostBot and renew it</b>."
        ),
        "lavhost": (
            "‚úåÔ∏è <b>Your userbot is installed on lavHost</b>. Make sure to join @lavhost"
            " for important notifications and updates. All questions regarding the"
            " platform should be asked in @lavhostchat."
        ),
        "language_saved": "üá¨üáß Language saved!",
        "language": "üá¨üáß English",
        "btn_support": "ü•∑ Support chat",
    }

    strings_ru = {
        "base": """üåòüá∑üá∫ <b>–ü—Ä–∏–≤–µ—Ç.</b> –¢–≤–æ–π —é–∑–µ—Ä–±–æ—Ç <b>Falcon</b> —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.

‚ùì <b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b> –í—Å—Ç—É–ø–∞–π –≤ –Ω–∞—à —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ú—ã –ø–æ–º–æ–≥–∞–µ–º <b>–≤—Å–µ–º</b>.

üìº <b>–¢—ã –º–æ–∂–µ—à—å –∏—Å–∫–∞—Ç—å –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –º–æ–¥—É–ª–∏ —á–µ—Ä–µ–∑ @hikkamods_bot. –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏ –Ω–∞–∂–º–∏ ‚õ© Install –Ω–∞ –Ω—É–∂–Ω–æ–º –º–æ–¥—É–ª–µ</b>


üíÅ‚Äç‚ôÄÔ∏è <b>–ë—ã—Å—Ç—Ä—ã–π –≥–∞–π–¥:</b>

1Ô∏è‚É£ <b>–ù–∞–ø–∏—à–∏</b> <code>.help</code> <b>—á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π</b>
2Ô∏è‚É£ <b>–ù–∞–ø–∏—à–∏</b> <code>.help &lt;–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è/–∫–æ–º–∞–Ω–¥–∞&gt;</code> <b>—á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥—É–ª—è</b>
3Ô∏è‚É£ <b>–ù–∞–ø–∏—à–∏</b> <code>.dlmod &lt;—Å—Å—ã–ª–∫–∞&gt;</code> <b>—á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å –∏–∑ —Å—Å—ã–ª–∫–∞</b>
4Ô∏è‚É£ <b>–ù–∞–ø–∏—à–∏</b> <code>.loadmod</code> <b>–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Ñ–∞–π–ª, —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å –∏–∑ –Ω–µ–≥–æ</b>
5Ô∏è‚É£ <b>–ù–∞–ø–∏—à–∏</b> <code>.unloadmod &lt;–ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è&gt;</code> <b>—á—Ç–æ–±—ã –≤—ã–≥—Ä—É–∑–∏—Ç—å –º–æ–¥—É–ª—å</b>

üí° <b>Falcon —è–≤–ª—è–µ—Ç—Å—è —Ñ–æ—Ä–∫–æ–º Hikka –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–æ–¥—É–ª–∏ –∏–∑ Friendly-Telegram, DragonUserbot –∏ GeekTG, –∞ —Ç–∞–∫–∂–µ —Å–≤–æ–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ.</b>
""",
        "FalconHost": (
            "ü§© <b>Your userbot is installed on FalconHost</b>.If you need help"
            " <b>join our community @FalconHelpChat</b>.  "
            " Every month <b>you will need to go to"
            " @FalconHostBot and renew it</b>."
        ),
        "lavhost": (
            "‚úåÔ∏è <b>–¢–≤–æ–π —é–∑–µ—Ä–±–æ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ lavHost</b>. –í—Å—Ç—É–ø–∏ –≤ @lavhost, —á—Ç–æ–±—ã"
            " –ø–æ–ª—É—á–∞—Ç—å –≤–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è. –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å"
            " –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π, —Å–ª–µ–¥—É–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å –≤ @lavhostchat."
        ),
        "language_saved": "üá∑üá∫ –Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!",
        "language": "üá∑üá∫ –†—É—Å—Å–∫–∏–π",
        "btn_support": "ü•∑ –ß–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏",
    }


    async def client_ready(self):
        if self.get("disable_quickstart"):
            raise loader.SelfUnload

        self.mark = (
            lambda: [
                [
                    {
                        "text": self.strings("btn_support"),
                        "url": "https://t.me/hikka_talks",
                    }
                ],
            ]
            + [
                [
                    {
                        "text": "üë©‚Äç‚öñÔ∏è Privacy Policy",
                        "url": "https://docs.google.com/document/d/15m6-pb1Eya8Zn4y0_7JEdvMLAo_v050rFMaWrjDjvMs/edit?usp=sharing",
                    },
                    {
                        "text": "üìú EULA",
                        "url": "https://docs.google.com/document/d/1sZBk24SWLBLoGxcsZHW8yP7yLncToPGUP1FJ4dS6z5I/edit?usp=sharing",
                    },
                ]
            ]
            + utils.chunks(
                [
                    {
                        "text": (
                            getattr(self, f"strings_{lang}")
                            if lang != "en"
                            else self.strings._base_strings
                        )["language"],
                        "callback": self._change_lang,
                        "args": (lang,),
                    }
                    for lang in [
                        "en",
                        "ru",
                        "fr",
                        "it",
                        "de",
                        "uz",
                        "tr",
                        "es",
                        "kk",
                        "tt",
                    ]
                ],
                3,
            )
        )

        self.text = (
            lambda: self.strings("base")
            + (
                "\n"
                + (
                    self.strings("railway")
                    if "RAILWAY" in os.environ
                    else (self.strings("lavhost") if "LAVHOST" in os.environ else "")
                )
            ).rstrip()
        )

        await self.inline.bot.send_animation(self._client.tg_id, animation=choice(imgs))
        await self.inline.bot.send_message(
            self._client.tg_id,
            self.text(),
            reply_markup=self.inline.generate_markup(self.mark()),
            disable_web_page_preview=True,
        )

        self.set("disable_quickstart", True)

    async def _change_lang(self, call: BotInlineCall, lang: str):
        self._db.set(translations.__name__, "lang", lang)
        await self.allmodules.reload_translations()

        await call.answer(self.strings("language_saved"))
        await call.edit(text=self.text(), reply_markup=self.mark())
